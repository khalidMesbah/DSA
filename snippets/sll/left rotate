
  void left_rotate(int k) { // O(n) time - O(1) memory
    if (length <= 1 || k % length == 0)
      return;    // 0 or 1 elements or useless rotation
    k %= length; // Remove useless cycles

    int cnt = 1;
    for (Node *cur = head; cur; cur = cur->next, cnt++) {
      tail = cur;
      head = cur->next;

      if (cnt == k) {
        tail->next = nullptr;
        break;
      }
    }
    debug_verify_data_integrity();
  }

	void left_rotate(int k) {		// O(n) time - O(1) memory
		if(length <= 1 || k % length == 0)
			return;	// 0 or 1 elements or useless rotation
		k %= length;	// Remove useless cycles

		Node* nth = get_nth(k);
		tail->next = head;		// create cycle

		// Reset tail/head
		tail = nth;
		head = nth->next;

		tail->next = nullptr;	// disconnect cycle
		debug_verify_data_integrity();
	}
