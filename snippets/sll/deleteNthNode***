  void delete_nth_node(int n) {
    if (!head || n < 1 || n > length) {
      return;
    } else if (head == tail) {
      delete_node(head);
      head = tail = nullptr;
    } else {
      for (Node *prv = nullptr, *cur = head; cur; prv = cur, cur = cur->next) {
        if (n-- == 1) {
          // first node
          if (!prv) {
            head = cur->next;
          } else {
            prv->next = cur->next;
            // last node
            if (!cur->next)
              tail = prv;
          }
          delete_node(cur);
          break;
        }
      }
    }

    debug_verify_data_integrity();
  }


  void delete_nth_node(int n) {
    if (!head || n < 1 || n > length) {
      return;
    } else if (head == tail) {
      delete_node(head);
      head = tail = nullptr;
    } else {
      Node *prv = head;

      for (; prv; prv = prv->next) {
        if (n == 1) {
          head = prv->next;
          delete_node(prv);
          break;
        } else if (--n == 1) {
          Node *cur = prv->next;

          prv->next = cur->next;

          if (cur == tail)
            tail = prv;

          delete_node(cur);
          break;
        }
      }
    }

    debug_verify_data_integrity();
  }
